### Import Library
import numpy as np 
import pandas as pd
from datetime import datetime
from pandas import DataFrame

pd.set_option('display.max_columns', 500)
pd.set_option('display.width', 500)

import matplotlib.pyplot as plt
import seaborn as sns

### Data Acquisition
dataset = pd.read_csv("Dataset/cleaned_weatherAUS.csv", parse_dates=["Date"])
dataset.info()

print(dataset)

### Data Preprocessing
dataset.notnull()
dataset.ffill(inplace=True)

dataset.isna().sum()

x = ["Yes", "No"]
y = [
(dataset["RainTomorrow"] == "No").sum(),
(dataset["RainTomorrow"] == "Yes").sum(),
]
bar_colors = ['tab:red', 'tab:blue']

### EDA
# 1
fig, ax = plt.subplots(figsize=(8, 4))

ax.bar(x, y, color=bar_colors)

ax.set_xlabel('')
ax.set_ylabel('')
ax.set_title('')
ax.grid(True)
# ax.legend(title='')

plt.tight_layout()
plt.show()

# 2
fig, ax = plt.subplots(figsize=(8, 4))

sns.countplot(dataset, y="RainTomorrow", hue="RainTomorrow")

ax.set_xlabel('')
ax.set_ylabel('')
ax.set_title('')
ax.grid(True)
# ax.legend(title='')

plt.tight_layout()
plt.show()

# 3
fig, ax = plt.subplots(figsize=(8, 4))

sns.countplot(dataset, y="RainToday", hue="RainToday")

ax.set_xlabel('')
ax.set_ylabel('')
ax.set_title('')
ax.grid(True)
# ax.legend(title='')

plt.tight_layout()
plt.show()

# 4
fig, ax = plt.subplots(figsize=(8, 4))

df_heatmap = dataset[["MinTemp", "MaxTemp", "Rainfall", "Evaporation", "Sunshine"]].corr()
sns.heatmap(data=df_heatmap, annot=True)

# 5
df_heatmap = dataset[["MinTemp", "MaxTemp", "Rainfall", "Evaporation", "Sunshine"]].corr()
df_heatmap

fig, ax = plt.subplots(figsize=(8, 4))

sns.violinplot(data=df_heatmap, bw_adjust=.5, cut=1, linewidth=1, palette="Set3")

ax.set_xlabel('')
ax.set_ylabel('')
ax.set_title('')
ax.grid(True)
# ax.legend(title='', ncol=3)

plt.tight_layout()
plt.show()

# 6
fig, ax = plt.subplots(figsize=(8, 4))

sns.boxenplot(data=dataset, x="Temp3pm", y="WindGustDir", width_method="linear")

ax.set_xlabel('')
ax.set_ylabel('')
ax.set_title('')
ax.grid(True)
# ax.legend(title='', ncol=3)

plt.tight_layout()
plt.show()

# 7
fig, ax = plt.subplots(figsize=(8, 4))

df_heatmap = dataset[["WindSpeed9am", "Humidity9am", "Pressure9am", "Cloud9am", "Temp9am"]].corr()
sns.heatmap(data=df_heatmap, annot=True)

ax.set_xlabel('')
ax.set_ylabel('')
ax.set_title('')
ax.grid(True)
# ax.legend(title='', ncol=3)

plt.tight_layout()
plt.show()

# 8
# Create the heatmap using Seaborn (which builds on Matplotlib)
# plt.figure(figsize=(12, 8))
fig, ax = plt.subplots(figsize= (12, 8))

df_heatmap = dataset[["MinTemp", "MaxTemp", "Rainfall", "Evaporation", "Sunshine", "WindGustSpeed", "WindSpeed9am", "WindSpeed3pm", 
                      "Humidity9am", "Humidity3pm", "Pressure9am", "Pressure3pm", "Cloud9am", "Cloud3pm", "Temp9am", "Temp3pm"]].corr()
df = pd.DataFrame(df_heatmap)

ax.set_xticks(np.arange(len(df.columns)))
ax.set_xticklabels(df.columns)
ax.set_yticks(np.arange(len(df.index)))
ax.set_yticklabels(df.index)
ax.tick_params(top=True, bottom=False,labeltop=True, rotation=45, labelbottom=False)
# plt.setp(ax.get_xticklabels(), rotation=45, ha="right", rotation_mode="anchor")

img = plt.imshow(df_heatmap, cmap='PiYG')
plt.grid(color='gray', linestyle='--', linewidth=0.5)
plt.colorbar(img, orientation='horizontal')
plt.title('Correlation Heatmap of Dataset Columns')
plt.xlabel('')
plt.ylabel('')

plt.tight_layout()
plt.show()

# 9
dataset[["WindGustDir", "RainTomorrow"]]

wgd = dataset.groupby("WindGustDir")["RainTomorrow"].count()
wgd = wgd.sort_values(ascending=False)

df_wgd = pd.DataFrame(wgd).reset_index()
df_wgd

fig, ax = plt.subplots(figsize=(8, 4))

sns.barplot(df_wgd, x="WindGustDir", y="RainTomorrow")

ax.set_xlabel('')
ax.set_ylabel('')
ax.set_title('')
ax.grid(True)
# ax.legend(title='', ncol=1)

plt.tight_layout()
plt.show()

# 10
fig, ax = plt.subplots(figsize=(8, 4))

sns.countplot(dataset, x="WindGustDir", hue="RainTomorrow")

ax.set_xlabel('')
ax.set_ylabel('')
ax.set_title('')
ax.grid(True)
ax.legend(title='', ncol=1)

plt.tight_layout()
plt.show()

#11
fig, ax = plt.subplots(figsize=(8, 4))

sns.scatterplot(data=dataset, x="WindGustSpeed", y="Pressure3pm", hue="Pressure3pm")

ax.set_xlabel('')
ax.set_ylabel('')
ax.set_title('')
ax.grid(True)
ax.legend(title='', ncol=3)

plt.tight_layout()
plt.show()

# 12
fig, ax = plt.subplots(figsize=(8, 4))

sns.scatterplot(data=dataset, x="WindSpeed9am", y="WindSpeed9am", hue="Humidity9am")

ax.set_xlabel('')
ax.set_ylabel('')
ax.set_title('')
ax.grid(True)
ax.legend(title='', ncol=3)

plt.tight_layout()
plt.show()

# 13
fig, ax = plt.subplots(figsize= (15, 5))

ax.plot(dataset['Date'], dataset['Humidity3pm'])
ax.set_title('')
ax.set_xlabel('Date')
ax.set_ylabel('Humidity3pm', color='blue')
ax.grid(True)
ax.tick_params(axis='y', labelcolor='blue')
ax.legend(title='', ncol=3)

plt.tight_layout()
plt.show()

# 14
df_location = dataset.groupby("Location")[["MinTemp", "MaxTemp", "Rainfall"]].mean().sort_values(by='Rainfall', ascending=False).reset_index().head(5)
df_location = np.round(df_location, decimals=2)
df_location

df_melt = pd.melt(df_location, id_vars=['Location'], value_vars=['MinTemp', 'MaxTemp', 'Rainfall'])
df_melt

fig, ax = plt.subplots(figsize=(8, 4))

sns.barplot(data=df_melt, x="Location", y="value", hue="variable")

ax.set_xlabel('')
ax.set_ylabel('')
ax.set_title('')
ax.grid(True)
ax.legend(title='', ncol=3)

plt.tight_layout()
plt.show()

# 15
df_location2 = dataset.groupby("Location")[["WindSpeed9am", "Humidity9am", "Cloud9am"]].mean().sort_values(by='Cloud9am', ascending=False).reset_index().head(5)
df_location2 = np.round(df_location2, decimals=2)
df_location2

df_melt2 = pd.melt(df_location2, id_vars=['Location'], value_vars=['WindSpeed9am', 'Humidity9am', 'Cloud9am'])
df_melt2

fig, ax = plt.subplots(figsize=(8, 4))

sns.barplot(data=df_melt2, x="Location", y="value", hue="variable")

ax.set_xlabel('')
ax.set_ylabel('')
ax.set_title('')
ax.grid(True)
ax.legend(title='', ncol=3)

plt.tight_layout()
plt.show()